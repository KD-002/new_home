# Generated by Django 4.0.2 on 2022-02-25 21:12
import datetime
import random

import factory.django
from django.db import migrations
from faker import Faker

from config import settings


def create_fake_users(apps, _) -> None:
    if not settings.DEBUG:
        return

    User = apps.get_model('users', 'CustomUser')
    Subtype = apps.get_model('host', 'Subtype')
    Host = apps.get_model('host', 'Host')
    faker = Faker()

    class UserFactory(factory.django.DjangoModelFactory):
        class Meta:
            model = User

        username = factory.Sequence(lambda _: faker.unique.first_name())
        email = factory.Sequence(lambda _: faker.email())
        password = factory.Sequence(lambda _: faker.password())

    class SubtypesFactory(factory.django.DjangoModelFactory):
        class Meta:
            model = Subtype

        name = factory.Sequence(lambda _: faker.text(max_nb_chars=100))

    class HostFactory(factory.django.DjangoModelFactory):
        class Meta:
            model = Host

        user = factory.SubFactory(UserFactory)
        subtype = factory.RelatedFactoryList(SubtypesFactory, size=lambda: random.randint(0, 5))
        title = factory.Sequence(lambda _: faker.text(max_nb_chars=200))
        start_date = factory.Sequence(lambda _: faker.date_between(
            start_date=datetime.date.today() + datetime.timedelta(days=10),
            end_date=datetime.date.today() + datetime.timedelta(days=30)
        ))
        end_date = factory.Sequence(lambda _: faker.date_between(
            start_date=datetime.date.today() + datetime.timedelta(days=45),
            end_date=datetime.date.today() + datetime.timedelta(days=300)
        ))
        description = factory.Sequence(lambda _: faker.text(max_nb_chars=1000))
        location = factory.Sequence(lambda _: faker.text(max_nb_chars=200))
        contact_address = factory.Sequence(lambda _: faker.text(max_nb_chars=500))
        contact_email = factory.Sequence(lambda _: faker.email())
        contact_phone = factory.Sequence(
            lambda _: random.randrange(start=int(10e9), stop=int(10e14)))

    for _ in range(200):
        HostFactory()


class Migration(migrations.Migration):
    dependencies = [
        ('host', '0001_initial'),
        ('users', '0002_super_user'),
    ]

    operations = [
        migrations.RunPython(create_fake_users),
    ]
